---
title: "Looping for Car Power Calculation"
author: "Jackson Coldiron"
editor: visual
format: 
  html:
    code-fold: show
    embed-resources: true
    theme: yeti
execute:
  freeze: auto 
  warning: false
  message: false
---

## Create Data

```{r}
# Load libraries
library(tidyverse)
library(purrr)
library(ggpubr)

# Bring in car power function
source("../R/autopower.R")

# Generate a structure to store info on our possible cars
possible_cars = data.frame(name = c("A","B","C", "D"),
                           mass = c(10000, 65000, 38000, 5000), 
                           area = c(22, 30, 22, 10))
# Simulate speeds
set.seed(42)
speeds <- rnorm(1000, mean = 80, sd = 10)
```

## Compute Power Using For Loop
```{r}
# Create an empty matrix to store power values (rows = speeds, cols = cars)
powerall2 <- as.data.frame(matrix(nrow = length(speeds), ncol = nrow(possible_cars)))

power_stats <- data.frame(name = character(), mean_power = numeric(), max_power = numeric(), stringsAsFactors = FALSE)

# Loop through each car and compute power for all speeds
for (i in 1:ncol(powerall2)) {
  # Compute power for all speeds for the current car
  power_values <- autopower(V = speeds, m = possible_cars$mass[i], A = possible_cars$area[i])
  
  # Store power values in the matrix
  powerall2[, i] <- power_values
  
  # Compute mean and max directly inside the loop
  power_stats <- rbind(power_stats, data.frame(
    name = possible_cars$name[i],  
    mean_power = mean(power_values, na.rm = TRUE),  
    max_power = max(power_values, na.rm = TRUE)  
  ))
}

# Print power stats
 # print(power_stats)

colnames(powerall2) <- possible_cars$name


# Boxplot
# Convert the power data into long format for ggplot
power_long <- powerall2 |>
  mutate(speed_id = 1:nrow(powerall2)) |>
  pivot_longer(cols = -speed_id, names_to = "Car", values_to = "Power")

# Create the boxplot
ggplot(power_long, aes(x = Car, y = Power, fill = Car)) +
  geom_boxplot() +
  labs(title = "Power Consumption Across Car Types",
       x = "Car Type",
       y = "Power (W)") +
  theme_minimal() +
  theme(legend.position = "none")

```

## Compute Power Using Purr
```{r}
library(purrr)

# Use purr to loop through the speeds and calculate mean and max
power_results_pmap <- possible_cars |>
  mutate(
    power_values = pmap(list(mass, area), 
                        ~ map_dbl(speeds, function(s) autopower(s, ..1, ..2))),
    mean_power = map_dbl(power_values, mean),
    max_power = map_dbl(power_values, max)
  )

# Print power stats
# print(power_results_pmap)

# Convert list-column to long format for plotting
power_pmap_long <- power_results_pmap |>
  select(name, power_values) |>
  unnest(power_values)

# Create boxplot
ggplot(power_pmap_long, aes(x = name, y = power_values, fill = name)) +
  geom_boxplot() +
  labs(title = "Power Consumption Across Car Types (pmap)",
       x = "Car Type",
       y = "Power (W)") +
  theme_minimal() +
  theme(legend.position = "none") 


```

